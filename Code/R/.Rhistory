# Computing the AR(1) variance-covariance structure based on the assumed values of the parameters
#set seed for reproducibility
set.seed(4747)
#number datasets
iter<-10000
#list for simulated dataframe
sim.df.ar<- list()
#number of participants
n<-20
#participants per group
n1<-5
#number of times
p<-5
# generate AR(1) covariance matrix
#matrix of distance between times
dist<- 1:p
H<- abs(outer(dist, dist, "-"))
#set AR(1) parameters
#sigma^2e = sigma^2z/ (1- phi^2)
#we know sigma^2z =1 and phi^2=0.6
#thus, sigma^2e = 1/(1-0.6) = 2.5
#this is the same as 1 + 1.5 from CS, where 1 is from sigma^2e and 1.5 is from sigma^2b
sig2<- 2.5
phi<-sqrt(0.6)
#variance covariance matrix
V<- sig2*phi^H
V
# Computing the UN variance-covariance structure based on the UN var-cov provided by Dr. Nichole Carlson for our class
# project and then scaling the values by dividing each off-diagonal value of the matrices by the mean of the diagonal
# so that this matrix remains closer in value to those of the CS and AR(1) var-cov structure
R_10 <- matrix(c(6.988, 6.755, 7.0115, 7.1315, 7.3183, 7.4758, 7.7466, 8.1752, 8.3013, 8.3872,
6.755, 8.7139, 8.7507, 8.9942, 9.1205, 9.2025, 9.6835, 9.9827, 10.1662, 10.1089,
7.0115, 8.7507, 10.3856, 10.2715, 10.4166, 10.5692, 11.0451, 11.2225, 11.6627, 11.811,
7.1315, 8.9942, 10.2715, 12.1268, 11.7023, 11.8662, 12.2579, 12.6695, 13.069, 13.2163,
7.3183, 9.1205, 10.4166, 11.7023, 13.014, 12.8216, 13.2749, 13.6248, 14.2559, 14.645,
7.4758, 9.2025, 10.5692, 11.8662, 12.8216, 14.3973, 14.2043, 14.4938, 14.9599, 15.4169,
7.7466, 9.6835, 11.0451, 12.2579, 13.2749, 14.2043, 15.6551, 15.7345, 16.3114, 16.7909,
8.1752, 9.9827, 11.2225, 12.6695, 13.6248, 14.4938, 15.7345, 17.8786, 17.8312, 18.3562,
8.3013, 10.1662, 11.6627, 13.069, 14.2559, 14.9599, 16.3114, 17.8312, 19.1028, 19.218,
8.3872, 10.1089, 11.811, 13.2163, 14.645, 15.4169, 16.7909, 18.3562, 19.218, 20.5045),
nrow = 10, ncol = 10)
R_5 <- matrix(c(6.988, 6.755, 7.0115, 7.1315, 7.3183,
6.755, 8.7139, 8.7507, 8.9942, 9.1205,
7.0115, 8.7507, 10.3856, 10.2715, 10.4166,
7.1315, 8.9942, 10.2715, 12.1268, 11.7023,
7.3183, 9.1205, 10.4166, 11.7023, 13.014),
nrow = 5, ncol = 5)
v5_un <- R_5 * 2.5 / mean(diag(R_5))
v10_un <- R_10 * 2.5 / mean(diag(R_10))
v5_un
v10_un
# Multiplying the matrices by 2.5 then dividing by the mean of the diagonals - Var-Cov structure
# for UN simulation.
